Benchmark                                                    (size)  Mode  Cnt       Score       Error  Units
d.c.fpl.list.Construct.appendAtEnd                                1    ss    5      17,840 ±    71,946  us/op
d.c.fpl.list.Construct.appendAtEnd                               10    ss    5      23,640 ±    67,414  us/op
d.c.fpl.list.Construct.appendAtEnd                              100    ss    5      66,380 ±    67,653  us/op
d.c.fpl.list.Construct.appendAtEnd                             1000    ss    5     333,480 ±   696,071  us/op
d.c.fpl.list.Construct.appendAtEnd                            10000    ss    5    1098,120 ±   498,430  us/op

d.c.list.Construct.appendAtEnd                                    1    ss    5      28,920 ±    21,839  us/op
d.c.list.Construct.appendAtEnd                                   10    ss    5     325,560 ±   308,373  us/op
d.c.list.Construct.appendAtEnd                                  100    ss    5    1255,440 ±   505,693  us/op
d.c.list.Construct.appendAtEnd                                 1000    ss    5    2340,980 ±   162,986  us/op
d.c.list.Construct.appendAtEnd                                10000    ss    5  230824,800 ± 27699,921  us/op

d.c.vector.Construct.appendAtEnd                                  1    ss    5      17,500 ±    26,292  us/op
d.c.vector.Construct.appendAtEnd                                 10    ss    5      37,840 ±    30,473  us/op
d.c.vector.Construct.appendAtEnd                                100    ss    5     289,140 ±   727,250  us/op
d.c.vector.Construct.appendAtEnd                               1000    ss    5     228,120 ±   133,164  us/op
d.c.vector.Construct.appendAtEnd                              10000    ss    5    1717,800 ±   223,283  us/op


d.c.fpl.list.Construct.appendAtStart                              1    ss    5      17,120 ±    72,348  us/op
d.c.fpl.list.Construct.appendAtStart                             10    ss    5      25,980 ±    67,106  us/op
d.c.fpl.list.Construct.appendAtStart                            100    ss    5      74,720 ±    14,062  us/op
d.c.fpl.list.Construct.appendAtStart                           1000    ss    5     119,560 ±    32,677  us/op
d.c.fpl.list.Construct.appendAtStart                          10000    ss    5    1063,960 ±   208,661  us/op

d.c.linked.list.Construct.appendAtStart                           1    ss    5      13,200 ±    60,722  us/op
d.c.linked.list.Construct.appendAtStart                          10    ss    5      23,600 ±    45,948  us/op
d.c.linked.list.Construct.appendAtStart                         100    ss    5      32,920 ±    44,111  us/op
d.c.linked.list.Construct.appendAtStart                        1000    ss    5      59,480 ±    60,814  us/op
d.c.linked.list.Construct.appendAtStart                       10000    ss    5     519,920 ±   116,262  us/op

d.c.list.Construct.appendAtStart                                  1    ss    5      25,680 ±    25,127  us/op
d.c.list.Construct.appendAtStart                                 10    ss    5      38,860 ±    32,102  us/op
d.c.list.Construct.appendAtStart                                100    ss    5     348,380 ±   219,912  us/op
d.c.list.Construct.appendAtStart                               1000    ss    5     141,820 ±    43,397  us/op
d.c.list.Construct.appendAtStart                              10000    ss    5     759,420 ±   122,913  us/op

d.c.vector.Construct.appendAtStart                                1    ss    5      19,920 ±    30,741  us/op
d.c.vector.Construct.appendAtStart                               10    ss    5      41,520 ±    48,388  us/op
d.c.vector.Construct.appendAtStart                              100    ss    5     237,160 ±   744,779  us/op
d.c.vector.Construct.appendAtStart                             1000    ss    5     217,720 ±    93,004  us/op
d.c.vector.Construct.appendAtStart                            10000    ss    5    1755,820 ±   399,387  us/op


d.c.fpl.list.Construct.appendLists                                1    ss    5      28,920 ±    56,261  us/op
d.c.fpl.list.Construct.appendLists                               10    ss    5      32,300 ±    66,453  us/op
d.c.fpl.list.Construct.appendLists                              100    ss    5     128,540 ±    66,002  us/op
d.c.fpl.list.Construct.appendLists                             1000    ss    5     331,420 ±    95,296  us/op
d.c.fpl.list.Construct.appendLists                            10000    ss    5    1507,680 ±   292,861  us/op

d.c.list.Construct.appendLists                                    1    ss    5      17,160 ±    25,195  us/op
d.c.list.Construct.appendLists                                   10    ss    5      59,740 ±    33,450  us/op
d.c.list.Construct.appendLists                                  100    ss    5     308,880 ±    95,303  us/op
d.c.list.Construct.appendLists                                 1000    ss    5     505,320 ±   276,619  us/op
d.c.list.Construct.appendLists                                10000    ss    5    1323,020 ±   364,899  us/op

d.c.vector.Construct.appendLists                                  1    ss    5      40,340 ±   163,017  us/op
d.c.vector.Construct.appendLists                                 10    ss    5      80,720 ±    39,794  us/op
d.c.vector.Construct.appendLists                                100    ss    5     701,760 ±   201,037  us/op
d.c.vector.Construct.appendLists                               1000    ss    5     584,660 ±   175,236  us/op
d.c.vector.Construct.appendLists                              10000    ss    5    3270,640 ±  2760,477  us/op


d.c.fpl.list.Construct.constructFromIterator                      1    ss    5      12,940 ±    45,771  us/op
d.c.fpl.list.Construct.constructFromIterator                     10    ss    5      24,800 ±    41,560  us/op
d.c.fpl.list.Construct.constructFromIterator                    100    ss    5      28,680 ±    46,278  us/op
d.c.fpl.list.Construct.constructFromIterator                   1000    ss    5      82,660 ±    49,001  us/op
d.c.fpl.list.Construct.constructFromIterator                  10000    ss    5     546,840 ±    76,244  us/op

d.c.linked.list.Construct.constructFromIterator                   1    ss    5      15,820 ±    42,491  us/op
d.c.linked.list.Construct.constructFromIterator                  10    ss    5      18,300 ±    53,431  us/op
d.c.linked.list.Construct.constructFromIterator                 100    ss    5      20,280 ±    39,301  us/op
d.c.linked.list.Construct.constructFromIterator                1000    ss    5      96,400 ±    42,255  us/op
d.c.linked.list.Construct.constructFromIterator               10000    ss    5     707,620 ±   123,632  us/op

d.c.list.Construct.constructFromIterator                          1    ss    5      20,840 ±    33,737  us/op
d.c.list.Construct.constructFromIterator                         10    ss    5      36,080 ±    32,521  us/op
d.c.list.Construct.constructFromIterator                        100    ss    5     246,460 ±   185,650  us/op
d.c.list.Construct.constructFromIterator                       1000    ss    5     148,740 ±    57,694  us/op
d.c.list.Construct.constructFromIterator                      10000    ss    5    1012,000 ±   160,676  us/op

d.c.vector.Construct.constructFromIterator                        1    ss    5      20,120 ±    30,357  us/op
d.c.vector.Construct.constructFromIterator                       10    ss    5      27,320 ±    27,787  us/op
d.c.vector.Construct.constructFromIterator                      100    ss    5      35,600 ±    31,680  us/op
d.c.vector.Construct.constructFromIterator                     1000    ss    5     106,780 ±    42,884  us/op
d.c.vector.Construct.constructFromIterator                    10000    ss    5     673,940 ±    93,115  us/op

d.c.fpl.list.Construct.constructFromIteratorWithKnownSize         1    ss    5       8,140 ±    35,918  us/op
d.c.fpl.list.Construct.constructFromIteratorWithKnownSize        10    ss    5       9,720 ±    47,106  us/op
d.c.fpl.list.Construct.constructFromIteratorWithKnownSize       100    ss    5      19,680 ±    46,345  us/op
d.c.fpl.list.Construct.constructFromIteratorWithKnownSize      1000    ss    5      54,040 ±    53,495  us/op
d.c.fpl.list.Construct.constructFromIteratorWithKnownSize     10000    ss    5     318,480 ±    41,457  us/op

d.c.list.Construct.constructFromIteratorWithKnownSize             1    ss    5      26,820 ±    38,090  us/op
d.c.list.Construct.constructFromIteratorWithKnownSize            10    ss    5      40,140 ±    26,705  us/op
d.c.list.Construct.constructFromIteratorWithKnownSize           100    ss    5     229,320 ±    27,216  us/op
d.c.list.Construct.constructFromIteratorWithKnownSize          1000    ss    5     172,260 ±    34,827  us/op
d.c.list.Construct.constructFromIteratorWithKnownSize         10000    ss    5    1100,220 ±   175,273  us/op

d.c.vector.Construct.constructFromIteratorWithKnownSize           1    ss    5      29,920 ±    30,505  us/op
d.c.vector.Construct.constructFromIteratorWithKnownSize          10    ss    5      39,380 ±    14,282  us/op
d.c.vector.Construct.constructFromIteratorWithKnownSize         100    ss    5      63,140 ±    30,459  us/op
d.c.vector.Construct.constructFromIteratorWithKnownSize        1000    ss    5     137,600 ±    32,836  us/op
d.c.vector.Construct.constructFromIteratorWithKnownSize       10000    ss    5     943,420 ±   237,198  us/op <- slower than constructFromIterator, why? Difference tabulate() vs. iterate()?


d.c.fpl.list.Consume.consumeFromEnd                               1    ss    5       3,860 ±     1,555  us/op
d.c.fpl.list.Consume.consumeFromEnd                              10    ss    5      15,540 ±     2,288  us/op
d.c.fpl.list.Consume.consumeFromEnd                             100    ss    5      58,440 ±    16,602  us/op
d.c.fpl.list.Consume.consumeFromEnd                            1000    ss    5     246,880 ±    47,015  us/op
d.c.fpl.list.Consume.consumeFromEnd                           10000    ss    5    1483,580 ±   104,163  us/op

d.c.list.Consume.consumeFromEnd                                   1    ss    5      18,200 ±    11,033  us/op
d.c.list.Consume.consumeFromEnd                                  10    ss    5      26,200 ±     4,540  us/op
d.c.list.Consume.consumeFromEnd                                 100    ss    5     129,760 ±    15,784  us/op
d.c.list.Consume.consumeFromEnd                                1000    ss    5     237,320 ±   114,061  us/op
d.c.list.Consume.consumeFromEnd                               10000    ss    5    1329,920 ±   104,090  us/op

d.c.vector.Consume.consumeFromEnd                                 1    ss    5      16,940 ±     3,699  us/op
d.c.vector.Consume.consumeFromEnd                                10    ss    5      20,700 ±     4,156  us/op
d.c.vector.Consume.consumeFromEnd                               100    ss    5      66,880 ±    14,251  us/op
d.c.vector.Consume.consumeFromEnd                              1000    ss    5     127,980 ±    38,612  us/op
d.c.vector.Consume.consumeFromEnd                             10000    ss    5    1243,180 ±   537,466  us/op <- here vector is faster than fpl

d.c.fpl.list.Consume.consumeFromStart                             1    ss    5       2,880 ±     0,997  us/op
d.c.fpl.list.Consume.consumeFromStart                            10    ss    5       8,120 ±     1,665  us/op
d.c.fpl.list.Consume.consumeFromStart                           100    ss    5      55,600 ±     2,510  us/op
d.c.fpl.list.Consume.consumeFromStart                          1000    ss    5     150,540 ±    47,280  us/op
d.c.fpl.list.Consume.consumeFromStart                         10000    ss    5    1445,220 ±   224,527  us/op

d.c.linked.list.Consume.consumeFromStart                          1    ss    5       2,040 ±     1,378  us/op
d.c.linked.list.Consume.consumeFromStart                         10    ss    5       3,580 ±     0,689  us/op
d.c.linked.list.Consume.consumeFromStart                        100    ss    5      23,880 ±     2,168  us/op
d.c.linked.list.Consume.consumeFromStart                       1000    ss    5      77,860 ±     6,645  us/op
d.c.linked.list.Consume.consumeFromStart                      10000    ss    5     702,460 ±   165,773  us/op

d.c.list.Consume.consumeFromStart                                 1    ss    5      18,960 ±    18,612  us/op
d.c.list.Consume.consumeFromStart                                10    ss    5      15,020 ±    12,960  us/op
d.c.list.Consume.consumeFromStart                               100    ss    5      39,900 ±     6,529  us/op
d.c.list.Consume.consumeFromStart                              1000    ss    5     114,240 ±    35,865  us/op
d.c.list.Consume.consumeFromStart                             10000    ss    5     713,880 ±    64,419  us/op

d.c.vector.Consume.consumeFromStart                               1    ss    5      19,220 ±    14,073  us/op
d.c.vector.Consume.consumeFromStart                              10    ss    5      11,700 ±     2,109  us/op
d.c.vector.Consume.consumeFromStart                             100    ss    5      31,640 ±    13,978  us/op
d.c.vector.Consume.consumeFromStart                            1000    ss    5     103,660 ±    40,154  us/op
d.c.vector.Consume.consumeFromStart                           10000    ss    5     710,300 ±   230,760  us/op <- here vector is much faster than fpl


d.c.fpl.list.Consume.getAllByIterator                             1    ss    5      10,320 ±    30,064  us/op
d.c.fpl.list.Consume.getAllByIterator                            10    ss    5       3,480 ±     1,317  us/op
d.c.fpl.list.Consume.getAllByIterator                           100    ss    5      12,900 ±     2,144  us/op
d.c.fpl.list.Consume.getAllByIterator                          1000    ss    5      61,040 ±     4,512  us/op
d.c.fpl.list.Consume.getAllByIterator                         10000    ss    5     521,900 ±   152,251  us/op

d.c.linked.list.Consume.getAllByIterator                          1    ss    5       6,660 ±    25,918  us/op
d.c.linked.list.Consume.getAllByIterator                         10    ss    5       2,980 ±     1,665  us/op
d.c.linked.list.Consume.getAllByIterator                        100    ss    5      11,840 ±     1,174  us/op
d.c.linked.list.Consume.getAllByIterator                       1000    ss    5      61,540 ±    10,873  us/op
d.c.linked.list.Consume.getAllByIterator                      10000    ss    5     531,700 ±   210,613  us/op

d.c.list.Consume.getAllByIterator                                 1    ss    5      11,720 ±    18,816  us/op
d.c.list.Consume.getAllByIterator                                10    ss    5      11,400 ±    17,640  us/op
d.c.list.Consume.getAllByIterator                               100    ss    5      38,800 ±    42,428  us/op
d.c.list.Consume.getAllByIterator                              1000    ss    5     106,420 ±    38,131  us/op
d.c.list.Consume.getAllByIterator                             10000    ss    5     709,880 ±    94,153  us/op

d.c.vector.Consume.getAllByIterator                               1    ss    5       3,860 ±     2,048  us/op
d.c.vector.Consume.getAllByIterator                              10    ss    5       6,520 ±    16,759  us/op
d.c.vector.Consume.getAllByIterator                             100    ss    5      17,740 ±     3,739  us/op
d.c.vector.Consume.getAllByIterator                            1000    ss    5      88,640 ±    11,961  us/op
d.c.vector.Consume.getAllByIterator                           10000    ss    5     729,700 ±   463,012  us/op


d.c.fpl.list.Consume.getAllRandomly                               1    ss    5      10,780 ±    49,430  us/op
d.c.fpl.list.Consume.getAllRandomly                              10    ss    5       2,860 ±     0,644  us/op
d.c.fpl.list.Consume.getAllRandomly                             100    ss    5      17,340 ±     2,048  us/op
d.c.fpl.list.Consume.getAllRandomly                            1000    ss    5      56,800 ±     5,188  us/op
d.c.fpl.list.Consume.getAllRandomly                           10000    ss    5     419,320 ±    35,405  us/op

d.c.linked.list.Consume.getAllRandomly                            1    ss    5       6,200 ±    35,958  us/op
d.c.linked.list.Consume.getAllRandomly                           10    ss    5       3,360 ±     0,967  us/op
d.c.linked.list.Consume.getAllRandomly                          100    ss    5      63,280 ±     4,727  us/op
d.c.linked.list.Consume.getAllRandomly                         1000    ss    5    1540,900 ±    52,805  us/op
d.c.linked.list.Consume.getAllRandomly                        10000    ss    5   53531,760 ±   701,991  us/op

d.c.list.Consume.getAllRandomly                                   1    ss    5      13,960 ±    11,324  us/op
d.c.list.Consume.getAllRandomly                                  10    ss    5      33,360 ±     8,859  us/op
d.c.list.Consume.getAllRandomly                                 100    ss    5     491,080 ±   460,571  us/op
d.c.list.Consume.getAllRandomly                                1000    ss    5     827,320 ±   405,885  us/op
d.c.list.Consume.getAllRandomly                               10000    ss    5   62853,720 ±   253,406  us/op

d.c.vector.Consume.getAllRandomly                                 1    ss    5      12,060 ±    17,718  us/op
d.c.vector.Consume.getAllRandomly                                10    ss    5       9,080 ±     2,333  us/op
d.c.vector.Consume.getAllRandomly                               100    ss    5      91,180 ±   417,174  us/op
d.c.vector.Consume.getAllRandomly                              1000    ss    5     123,000 ±    41,282  us/op
d.c.vector.Consume.getAllRandomly                             10000    ss    5     720,960 ±   409,318  us/op


d.c.fpl.list.Consume.recursiveSplit                               1    ss    5       2,020 ±     0,878  us/op
d.c.fpl.list.Consume.recursiveSplit                              10    ss    5      14,340 ±     5,319  us/op
d.c.fpl.list.Consume.recursiveSplit                             100    ss    5     106,760 ±    11,864  us/op
d.c.fpl.list.Consume.recursiveSplit                            1000    ss    5     179,140 ±    18,885  us/op
d.c.fpl.list.Consume.recursiveSplit                           10000    ss    5    1455,180 ±   153,135  us/op

d.c.list.Consume.recursiveSplit                                   1    ss    5       3,020 ±     2,027  us/op
d.c.list.Consume.recursiveSplit                                  10    ss    5      35,580 ±    17,911  us/op
d.c.list.Consume.recursiveSplit                                 100    ss    5     356,340 ±   356,254  us/op
d.c.list.Consume.recursiveSplit                                1000    ss    5     329,220 ±   465,702  us/op
d.c.list.Consume.recursiveSplit                               10000    ss    5    2181,540 ±   369,730  us/op

d.c.vector.Consume.recursiveSplit                                 1    ss    5       2,040 ±     0,886  us/op
d.c.vector.Consume.recursiveSplit                                10    ss    5      41,720 ±    29,165  us/op
d.c.vector.Consume.recursiveSplit                               100    ss    5     450,380 ±   844,196  us/op
d.c.vector.Consume.recursiveSplit                              1000    ss    5     391,660 ±   203,532  us/op
d.c.vector.Consume.recursiveSplit                             10000    ss    5    1690,220 ±   356,858  us/op


d.c.fpl.list.MapAndFlatMap.mapElementsToTheirDoubleValue          1    ss    5       9,200 ±    22,969  us/op
d.c.fpl.list.MapAndFlatMap.mapElementsToTheirDoubleValue         10    ss    5      13,580 ±    26,824  us/op
d.c.fpl.list.MapAndFlatMap.mapElementsToTheirDoubleValue        100    ss    5      21,960 ±    17,542  us/op
d.c.fpl.list.MapAndFlatMap.mapElementsToTheirDoubleValue       1000    ss    5      65,760 ±    26,500  us/op
d.c.fpl.list.MapAndFlatMap.mapElementsToTheirDoubleValue      10000    ss    5     340,080 ±    88,101  us/op

d.c.linked.list.MapAndFlatMap.mapElementsToTheirDoubleValue       1    ss    5      15,200 ±    29,828  us/op
d.c.linked.list.MapAndFlatMap.mapElementsToTheirDoubleValue      10    ss    5      12,780 ±    34,311  us/op
d.c.linked.list.MapAndFlatMap.mapElementsToTheirDoubleValue     100    ss    5      22,560 ±    23,401  us/op
d.c.linked.list.MapAndFlatMap.mapElementsToTheirDoubleValue    1000    ss    5      72,920 ±    43,101  us/op
d.c.linked.list.MapAndFlatMap.mapElementsToTheirDoubleValue   10000    ss    5     572,800 ±   118,518  us/op

d.c.list.MapAndFlatMap.mapElementsToTheirDoubleValue              1    ss    5      17,960 ±    40,124  us/op
d.c.list.MapAndFlatMap.mapElementsToTheirDoubleValue             10    ss    5      19,200 ±    34,165  us/op
d.c.list.MapAndFlatMap.mapElementsToTheirDoubleValue            100    ss    5      80,740 ±     3,418  us/op
d.c.list.MapAndFlatMap.mapElementsToTheirDoubleValue           1000    ss    5     140,060 ±    32,379  us/op
d.c.list.MapAndFlatMap.mapElementsToTheirDoubleValue          10000    ss    5     997,560 ±   181,517  us/op

d.c.vector.MapAndFlatMap.mapElementsToTheirDoubleValue            1    ss    5      10,880 ±    35,063  us/op
d.c.vector.MapAndFlatMap.mapElementsToTheirDoubleValue           10    ss    5      15,620 ±    38,329  us/op
d.c.vector.MapAndFlatMap.mapElementsToTheirDoubleValue          100    ss    5      37,560 ±    35,427  us/op
d.c.vector.MapAndFlatMap.mapElementsToTheirDoubleValue         1000    ss    5      68,380 ±    36,982  us/op
d.c.vector.MapAndFlatMap.mapElementsToTheirDoubleValue        10000    ss    5     468,620 ±    96,207  us/op


d.c.fpl.list.MapAndFlatMap.flatMap                                1    ss    5      22,780 ±    19,903  us/op
d.c.fpl.list.MapAndFlatMap.flatMap                               10    ss    5      42,540 ±    23,105  us/op
d.c.fpl.list.MapAndFlatMap.flatMap                              100    ss    5     171,940 ±    56,137  us/op
d.c.fpl.list.MapAndFlatMap.flatMap                             1000    ss    5    1016,600 ±   308,625  us/op
d.c.fpl.list.MapAndFlatMap.flatMap                            10000    ss    5    3345,020 ±   493,813  us/op

d.c.linked.list.MapAndFlatMap.flatMap                             1    ss    5      13,360 ±    20,903  us/op
d.c.linked.list.MapAndFlatMap.flatMap                            10    ss    5      21,580 ±    22,544  us/op
d.c.linked.list.MapAndFlatMap.flatMap                           100    ss    5      80,520 ±    18,408  us/op
d.c.linked.list.MapAndFlatMap.flatMap                          1000    ss    5     227,380 ±    53,689  us/op
d.c.linked.list.MapAndFlatMap.flatMap                         10000    ss    5    1573,580 ±   328,936  us/op

d.c.list.MapAndFlatMap.flatMap2                                   1    ss    5     209,340 ±    69,840  us/op
d.c.list.MapAndFlatMap.flatMap2                                  10    ss    5     102,680 ±    59,827  us/op
d.c.list.MapAndFlatMap.flatMap2                                 100    ss    5     728,580 ±  1135,413  us/op
d.c.list.MapAndFlatMap.flatMap2                                1000    ss    5     743,840 ±    80,110  us/op
d.c.list.MapAndFlatMap.flatMap2                               10000    ss    5    4700,560 ±   849,897  us/op

d.c.vector.MapAndFlatMap.flatMap2                                 1    ss    5     302,020 ±    52,100  us/op
d.c.vector.MapAndFlatMap.flatMap2                                10    ss    5      83,460 ±    29,136  us/op
d.c.vector.MapAndFlatMap.flatMap2                               100    ss    5     498,840 ±    95,752  us/op
d.c.vector.MapAndFlatMap.flatMap2                              1000    ss    5     507,020 ±    98,414  us/op
d.c.vector.MapAndFlatMap.flatMap2                             10000    ss    5    2710,200 ±   851,223  us/op <- for smaller sub lists, vector is faster than fpl


d.c.fpl.list.MapAndFlatMap.flatMap100                             1    ss    5      37,180 ±    30,119  us/op
d.c.fpl.list.MapAndFlatMap.flatMap100                            10    ss    5      93,940 ±    16,550  us/op
d.c.fpl.list.MapAndFlatMap.flatMap100                           100    ss    5     590,320 ±    60,923  us/op
d.c.fpl.list.MapAndFlatMap.flatMap100                          1000    ss    5    1881,580 ±   115,533  us/op
d.c.fpl.list.MapAndFlatMap.flatMap100                         10000    ss    5   11229,120 ±  5724,408  us/op

d.c.linked.list.MapAndFlatMap.flatMap100                          1    ss    5      32,340 ±     1,937  us/op
d.c.linked.list.MapAndFlatMap.flatMap100                         10    ss    5      73,640 ±    53,755  us/op
d.c.linked.list.MapAndFlatMap.flatMap100                        100    ss    5     463,400 ±    34,851  us/op
d.c.linked.list.MapAndFlatMap.flatMap100                       1000    ss    5    1556,580 ±   478,985  us/op
d.c.linked.list.MapAndFlatMap.flatMap100                      10000    ss    5  167084,640 ± 14300,795  us/op

d.c.list.MapAndFlatMap.flatMap2_100                               1    ss    5     370,500 ±   588,439  us/op
d.c.list.MapAndFlatMap.flatMap2_100                              10    ss    5     256,160 ±   120,348  us/op
d.c.list.MapAndFlatMap.flatMap2_100                             100    ss    5    1539,360 ±   585,838  us/op
d.c.list.MapAndFlatMap.flatMap2_100                            1000    ss    5    4032,840 ±   434,589  us/op
d.c.list.MapAndFlatMap.flatMap2_100                           10000    ss    5  104074,560 ± 33109,803  us/op

d.c.vector.MapAndFlatMap.flatMap2_100                             1    ss    5     305,140 ±    27,723  us/op
d.c.vector.MapAndFlatMap.flatMap2_100                            10    ss    5     278,580 ±   348,848  us/op
d.c.vector.MapAndFlatMap.flatMap2_100                           100    ss    5    1516,440 ±   986,674  us/op
d.c.vector.MapAndFlatMap.flatMap2_100                          1000    ss    5    1729,420 ±   317,126  us/op
d.c.vector.MapAndFlatMap.flatMap2_100                         10000    ss    5   12933,660 ±  9182,452  us/op <- for larger sub lists, performance similar to fpl
